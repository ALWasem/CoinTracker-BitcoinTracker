openapi: 3.0.3
info:
  title: CoinTracker Bitcoin Tracker API
  version: '0.1.0'
  description: Minimal API for adding, syncing, and reading Bitcoin addresses and transactions.
servers:
  - url: http://127.0.0.1:5000
paths:
  /addresses:
    get:
      summary: List all tracked addresses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressResponse'
    post:
      summary: Add a Bitcoin address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [address]
              properties:
                address:
                  type: string
      responses:
        '201':
          description: Created
        '400':
          description: Address required or already exists
  /addresses/{address}:
    delete:
      summary: Remove a Bitcoin address
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        '200': { description: Removed }
        '404': { description: Not found }
  /sync/{address}:
    post:
      summary: Sync an address from the blockchain API
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        '200': { description: Synced }
        '404': { description: Address not found }
  /transactions/{address}:
    get:
      summary: Get transactions for an address
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionResponse'
        '404': { description: Address not found }
components:
  schemas:
    # Response shapes returned by the current API
    AddressResponse:
      type: object
      description: Address object returned by GET /addresses (subset of AddressRecord)
      properties:
        address:
          type: string
          description: Bitcoin address
          example: bc1q0sg9rdst255gtldsmcf8rk0764avqy2h2ksqs5
        balance:
          type: string
          description: Current balance in BTC with 8 decimal places
          example: "0.00020858"
        last_synced:
          type: string
          format: date-time
          description: Last time this address was synced (UTC)
    TransactionResponse:
      type: object
      description: Transaction object returned by GET /transactions/{address}
      properties:
        tx_hash:
          type: string
          example: 4b0f...c9e2
        amount:
          type: string
          description: BTC amount with 8 decimal places (absolute value)
          example: "0.00010000"
        timestamp:
          type: string
          format: date-time
          description: Block time (UTC), or current time if unconfirmed
        type:
          type: string
          enum: [incoming, outgoing]
          description: Direction relative to the address

    # Records mirror the database schema (for documentation)
    AddressRecord:
      type: object
      description: Persistent representation of an address row
      properties:
        id:
          type: integer
          example: 1
        address:
          type: string
        balance:
          type: number
          format: float
        last_synced:
          type: string
          format: date-time
        transactions:
          type: array
          description: Transactions associated with this address
          items:
            $ref: '#/components/schemas/TransactionRecord'
    TransactionRecord:
      type: object
      description: Persistent representation of a transaction row
      properties:
        id:
          type: integer
          example: 42
        address_id:
          type: integer
          description: Foreign key referencing AddressRecord.id
          example: 1
        tx_hash:
          type: string
        amount:
          type: number
          format: float
        timestamp:
          type: string
          format: date-time
        tx_type:
          type: string
          enum: [incoming, outgoing]
